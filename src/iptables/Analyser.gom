module iptables.Analyser
imports boolean int long String
abstract syntax

	Rules = rules(Rule*)

	Rule = rule(
			action:Action,
			iface:Iface,
			proto:Protocol,
			target:Target,
			srcAddr:Address,
			destAddr:Address,
			srcPort:Port,
			destPort:Port,
			opts:Options)

	Action =
		Accept()
		| Drop() /* do not process the packet */
		| Reject() /* drop then send an error message to the sender */
		| Log()

	/* The network interface */
	Iface = Iface(name:String)

	Protocol =
		ProtoAny()
		| TCP()
		| UDP()
		| IPv4()
		| IPv6()
		| ICMP()
		| ARP()
		| RIP()
		| Ethernet()

	Target =
		In()
		| Out()
		| Forward()

	Address =
		AddrAny()
		| Addr4(ip:int,smask:int)
		| Addr6(ipms:long,ipls:long,smaskms:long,smaskls:long)

	Port =
		PortAny()
		| Port(number:int)


	Options = 
		NoOpt()
		| Opt(global:GlobalOptions, proto:ProtocolOptions, states:States)

	/* Global options */
	GlobalOptions = GlobalOpts(GlobalOption*)

	GlobalOption =
		LogLevel(level:int)

	/* Protocol options */
	ProtocolOptions = ProtoOpts(ProtocolOption*)

	ProtocolOption =
		ICMPxType(id:int)
		| ICMPxTTLZero()
		| ICMPxDestinationUnreachable()
		| TCPxSyn(val:boolean)
		| TCPxAck(val:boolean)

	/* Packet state options */
	States = states(State*)

	State =
		StateAny()
		| New()
		| Related() /* New connection associated with an existing one */
		| Established() /* packets was seen in both directions */
		| Invalid() /* packets associated with no known connection */
